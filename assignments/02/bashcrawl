=====================
Welcome to bashcrawl!
=====================

This is a game to teach you the basics of using a POSIX (Linux, BSD,
UNIX) terminal, like the one where you are reading this message now.

Your first move is very important.
Type this into the terminal, and press RETURN:

    cat scroll

You are now playing the game.
May the gods save you.

~/entrance$ cat scroll

It is pitch black in these catacombs.
You have a magickal spell that lists all items in a room.

To see in the dark, type:     ls
To move around, type:         cd <directory>

Try looking around this room.
Then move into one of the next rooms.

EXAMPLE:

$ ls 
$ cd cellar

Remember to cast ``ls`` when you get into the next room!

~/entrance$ ls
cellar  scroll
~/entrance$ cd cellar
~/entrance/cellar$ ls
armoury  scroll  treasure
~/entrance/cellar$ cat scroll

# Illusions are strong here.
# It is difficult to tell what is a doorway and what is an object.
#
# The magic spell you use to look can be augmented.
#
# From now on, cast your spell like this:
# 
# ls -F
# 
# Directories (the rooms of these catacombs) end with a / symbol.
# 
# Encounters (programs) end with a * symbol.
#
# You can avoid having to type `ls -F` every time by running the
# following:
#
# alias ls='ls -F'
#
# This is known as a shell or command alias.  With this alias,
# typing simply ls by itself will run ls -F. Try it out!
#
~/entrance/cellar$ ls
armoury  scroll  treasure
~/entrance/cellar$ cd armoury
~/entrance/cellar/armoury$ ls
chamber  potion  scroll  treasure
~/entrance/cellar/armoury$ cat scroll

# You can interact with items in the room (they end with a *)
# by running them as a command (a shell script).
#
# For example, to collect treasure:
#
# ./treasure
# 
# The . (dot) means *don't move*, and the name of the 
# script makes the code run.  This is known as a 
# relative path, and the . means the current room
# (directory).
# 
# You may have left treasure in the previous room.
# Go back to a previous directory with two dots,
# which means *take a step back*.
#
# EXAMPLE:
#
# cd ..

~/entrance/cellar/armoury$ ./treasure
You have found a gleaming silver **sword**!  You marvel at
its craftsmanship, and you recall tales from your childhood
of the great mystic king Rannismir who bore such a sword to
protect the kingdom from the undead.

Add this item to your inventory:

export I=sword,$I

Remember, you can check your inventory:

echo $I

~/entrance/cellar/armoury$ echo $I

~/entrance/cellar/armoury$ $I#
bash: #: command not found
~/entrance/cellar/armoury$ $I
~/entrance/cellar/armoury$ I
bash: I: command not found
~/entrance/cellar/armoury$ ls
chamber  potion  scroll  treasure
~/entrance/cellar/armoury$ cd chamber
~/entrance/cellar/armoury/chamber$ ls
scroll  spell  statue  treasure
~/entrance/cellar/armoury/chamber$ ./spell
Runes, the language of the ancient mystics that once ruled
this land, are inscribed upon the western wall.

Do you want to read them? y/n  y
You recall the lessons of Caitlyn the Green, who taught you
these ancient letters.  

The runes are instructions on how to summon a portal that
will allow you to walk through an invisible door contained
in the wall.

In Bash, a symbolic link (symlink) is a *shortcut* to
another file or directory.  Create one from this room to the
adjacent one:

ln -fs ../../../chapel/courtyard/aviary/hall portal

~/entrance/cellar/armoury/chamber$ ./statue
A rugged statue stands in the corner of the room.

Do you approach it? y/n  y
The statue springs to life, rumbling:

WHO DARES INTRUDE UPON THE CHAMBER OF SPIRITS?

It thrusts a fist at you, hitting you for 5 damage.

You have been slain by the statue.

GAME OVER!
